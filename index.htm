<!DOCTYPE html>
<html>
	<head>
		<meta charset=utf-8 /> 
		<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, minimal-ui' />
		<title>ObservatorioTerritorialGC</title>
		<link rel="shortcut icon" type="image/x-icon" href="favicon.png">

		<!-- CSS -->
		<link rel="stylesheet" href="https://unpkg.com/leaflet@1.0.3/dist/leaflet.css">
		<link rel="stylesheet" href="css/Leaflet.PolylineMeasure.css">
		<link rel="stylesheet" href="css/Leaflet.StreetViewButtons.css">
		<link rel="stylesheet" href="css/bundle .css">
		<link rel="stylesheet" href="css/leaflet.groupedlayercontrol.min.css">
		<style type="text/css">	
			.leaflet-control-attribution.leaflet-control a:hover {color:#800080}
			.logogc{position:absolute;z-index:2;top:5px;right:350px}
			h1 { color: #800080;}
			.leaflet-control-attribution.leaflet-control { font-size: 16px;	}
			
			@font-face {
				font-family: Gotham;
				src: url(fonts/Gotham-Book.otf);
				font-weight: normal;
			}

			@font-face {
				font-family: Gotham;
				src: url(fonts/Gotham-Bold.otf);
				font-weight: bold;
			}
			
			.leaflet-container {
				font: 13px/1.5 Gotham;
			}
			
		    #referencias {
				position: absolute;
				width: 150px;
				height: 50%;
				top: 40%;
				left: 20px;
				z-index: 400;
		    }

		    .icono_referencia {
				display: none;
				font: 18px/1.5 Gotham;
				color: #222222;
				margin-bottom: 15px;
				text-align: left;
				background-color: rgba(255, 255, 255, 0.4);
				border-color: #444444;
				border-width: 3px;
				border-style: solid;
				padding: 10px;
		    }
		
		</style>
		
		<!-- SCRIPTS -->
		<script src="https://unpkg.com/leaflet@1.0.3/dist/leaflet.js"></script>
		<script src="scripts/Leaflet.PolylineMeasure.js"></script>
		<script src="scripts/StreetViewButtons.js"></script>
		<script src="scripts/bundle.js"></script>
		<script src="scripts/leaflet.pattern.js"></script>
		<script src="scripts/leaflet-tilelayer-wmts.js"></script>
		<script src="scripts/leaflet.groupedlayercontrol.min.js"></script>
		<script src="scripts/Bing.js"></script>
		
		
		<!-- GEOJSON -->
		<script type="text/javascript" src="scripts/Esculturas.js"></script>
		<script type="text/javascript" src="scripts/Centrosdesalud.js"></script>
		<script type="text/javascript" src="scripts/godoycruz.js"></script>
		<script type="text/javascript" src="scripts/CicloviasProyectadas.js"></script>
		<script type="text/javascript" src="scripts/CicloviasExistentes.js"></script>
		<script type="text/javascript" src="scripts/ClinicasPrivadas.js"></script>
		<script type="text/javascript" src="scripts/Hospital.js"></script>
		<script type="text/javascript" src="scripts/Escuelas.js"></script>
		<script type="text/javascript" src="scripts/Farmacias.js"></script>
		<script type="text/javascript" src="scripts/ResidenciasAdultosMayores.js"></script>
		<script type="text/javascript" src="scripts/JardinesMunicipales.js"></script>
		<script type="text/javascript" src="scripts/Polideportivos.js"></script>
		<script type="text/javascript" src="scripts/Seguridad.js"></script>
		<script type="text/javascript" src="scripts/Reservorios.js"></script>
		<script type="text/javascript" src="scripts/BarriosPopulares.js"></script>
		<script type="text/javascript" src="scripts/Zonificacion.js"></script>
		<script type="text/javascript" src="scripts/BarriosyLoteos.js"></script>
		<script type="text/javascript" src="scripts/RedesdeAguas.js"></script>
		<script type="text/javascript" src="scripts/SistemaCloacal.js"></script>
		<script type="text/javascript" src="scripts/LineasD.js"></script>
		<script type="text/javascript" src="scripts/Cuencashidrograficas.js"></script>
		<script type="text/javascript" src="scripts/LineasT.js"></script>
		<script type="text/javascript" src="scripts/CanalesColectoresHijuelas.js"></script>
		<script type="text/javascript" src="scripts/PuntosRecepcionPilas.js"></script>
		<script type="text/javascript" src="scripts/PuntosVerdes.js"></script>
		<script type="text/javascript" src="scripts/EspaciosVerdes.js"></script>
		<script type="text/javascript" src="scripts/DependenciasMunicipales.js"></script>
		<script type="text/javascript" src="scripts/Solmaforos.js"></script>
		<script type="text/javascript" src="scripts/EstacionesdeServicio.js"></script>
		<script type="text/javascript" src="scripts/Estaciones.js"></script>
		<script type="text/javascript" src="scripts/Ripieras.js"></script>
		<script type="text/javascript" src="scripts/ZonaNatural.js"></script>
		<script type="text/javascript" src="scripts/ZonaUrbana.js"></script>
		<script type="text/javascript" src="scripts/LimiteUrbano.js"></script>
        <script type="text/javascript" src="scripts/DistritosDepartamentales.js"></script>
		<script type="text/javascript" src="scripts/PlantaRecicladora.js"></script>
		<script type="text/javascript" src="scripts/Bancos.js"></script>
		<script type="text/javascript" src="scripts/Cajeros.js"></script>
		<script type="text/javascript" src="scripts/Pagofacil.js"></script>
	</head>
	<body> 
		<h1 style="position: relative; margin-top: 10px; margin-left: 100px; z-index: 2">Observatorio Territorial de Godoy Cruz</h1>
		<img src="favicon.png" height= "45px" width="45px" align=right class="logogc">
		<div id="map" class="map map-home" style="margin:8px 0 8px 0;height:680px;"></div> 
		<div id="referencias">
			<div class="icono_referencia" id="ref_cicloviasproy">Ciclovias Proyectadas:</br>30,13 Km.</div> <b>
			<div class="icono_referencia" id="ref_cicloviasexist">Ciclovias Existentes:</br>20,81 Km.</div>
			
		</div>
	

		<!-- FUNCIONES LEAFLET -->
		<script>
			/* ARGENMAP */
			var mapabase_argenmap = new L.TileLayer.WMTS( 'https://wms.ign.gob.ar/geoserver/capabaseargenmap/gwc/service/wmts?' , {
				layer: 'capabaseargenmap',
				style: "normal",
				tilematrixSet: "EPSG:3857",
				format: "image/png",
				attribution: " <a href='https://www.ign.gob.ar/AreaServicios/Argenmap/IntroduccionV2'> IGN - Argenmap v2 </a> | <a href='https://www.godoycruz.gob.ar/'>Secretaria de Ambiente y Desarrollo Sustentable - Godoy Cruz</a> | <a href='https://github.com/mylen/leaflet.TileLayer.WMTS'>GitHub</a>&copy "
			});
			
			/* ICONOS */
			var iconoComun = L.Icon.extend({
				options: {
					shadowUrl: 'img/marker-shadow.png',
					iconSize:     [25, 41],
					shadowSize:   [41, 41],
					iconAnchor:   [12, 41],
					popupAnchor:  [1, -34]
				}
			});

			var iconoVerde = new iconoComun({iconUrl: 'img/marker-icon-2x-green.png'}),
				iconoRojo = new iconoComun({iconUrl: 'img/marker-icon-2x-red.png'}),
				iconoNegro = new iconoComun({iconUrl: 'img/marker-icon-2x-black.png'}),
				iconoAzul = new iconoComun({iconUrl: 'img/marker-icon-2x-blue.png'}),
				iconoDorado = new iconoComun({iconUrl: 'img/marker-icon-2x-gold.png'}),
				iconoNaranja= new iconoComun({iconUrl: 'img/marker-icon-2x-orange.png'}),
				iconoGris = new iconoComun({iconUrl: 'img/marker-icon-2x-grey.png'}),
				iconoVioleta = new iconoComun({iconUrl: 'img/marker-icon-2x-violet.png'}),
				iconoAmarillo = new iconoComun({iconUrl: 'img/marker-icon-2x-yellow.png'}),
				iconoAntena = new iconoComun({iconUrl: 'img/ante_r2.png'}),
				iconoBiblio = new iconoComun({iconUrl: 'img/biblio_r2.png'}),
			    iconoEscul = new iconoComun({iconUrl: 'img/escultura_3.png'}),	
				iconoCentrosalud = new iconoComun({iconUrl: 'img/centrosalud_r2.png'}),
				iconoClinicaprivada = new iconoComun({iconUrl: 'img/clinicaprivada_r2.png'}),
				iconoDependmuni= new iconoComun({iconUrl: 'img/dependmuni_r2.png'}),
				iconoEstabeducat= new iconoComun({iconUrl: 'img/estabeducat_r2.png'}),
				iconoFarmacias = new iconoComun({iconUrl: 'img/farmacias_r2.png'}),
				iconoHospitales= new iconoComun({iconUrl: 'img/hospitales2.png'}),
				iconoSeguridad= new iconoComun({iconUrl: 'img/institucseguridad_r2.png'}),
				iconoJardmatern= new iconoComun({iconUrl: 'img/jardmatern_r2.png'}),
				iconoPoli= new iconoComun({iconUrl: 'img/poli_r2.png'}),
				iconoSema_r2= new iconoComun({iconUrl: 'img/sema_r2.png'}),
				iconoPilas = new iconoComun({iconUrl: 'img/pilas_r2.png'}),
				iconoUnivec = new iconoComun({iconUrl: 'img/univec_r2.png'}),
				iconoSTV = new iconoComun({iconUrl: 'img/pegman_3.png'}),
				iconoVerde2 = new iconoComun({iconUrl: 'img/verde2_r2.png'});
				

			
			function crearIconoVerde (feature, latlng) {
				return L.marker(latlng, { icon: iconoVerde })
			}
			var asignarIconoVerde = {
			  pointToLayer: crearIconoVerde
			}

			function crearIconoRojo (feature, latlng) {
				return L.marker(latlng, { icon: iconoRojo })
			}
			var asignarIconoRojo = {
			  pointToLayer: crearIconoRojo
			}

			function crearIconoNegro (feature, latlng) {
				return L.marker(latlng, { icon: iconoNegro })
			}
			var asignarIconoNegro = {
			  pointToLayer: crearIconoNegro
			}

			function crearIconoAzul (feature, latlng) {
				return L.marker(latlng, { icon: iconoAzul })
			}
			var asignarIconoAzul= {
			  pointToLayer: crearIconoAzul
			}

			function crearIconoDorado (feature, latlng) {
				return L.marker(latlng, { icon: iconoDorado })
			}
			var asignarIconoDorado = {
			  pointToLayer: crearIconoDorado
			}

			function crearIconoNaranja (feature, latlng) {
				return L.marker(latlng, { icon: iconoNaranja})
			}
			var asignarIconoNaranja = {
			  pointToLayer: crearIconoNaranja
			}

			function crearIconoGris (feature, latlng) {
				return L.marker(latlng, { icon: iconoGris  })
			}
			var asignarIconoGris  = {
			  pointToLayer: crearIconoGris 
			}

			function crearIconoVioleta (feature, latlng) {
				return L.marker(latlng, { icon: iconoVioleta })
			}
			var asignarIconoVioleta = {
			  pointToLayer: crearIconoVioleta
			}

			function crearIconoAmarillo (feature, latlng) {
				return L.marker(latlng, { icon: iconoAmarillo })
			}
			var asignarIconoAmarillo = {
			  pointToLayer: crearIconoAmarillo
			}
			
			function crearIconoAntena (feature, latlng) {
				return L.marker(latlng, { icon: iconoAntena })
			}
			var asignarIconoAntena = {
			  pointToLayer: crearIconoAntena
			}
			
			function crearIconoBiblio (feature, latlng) {
				return L.marker(latlng, { icon: iconoBiblio })
			}
			var asignarIconoBiblio = {
			  pointToLayer: crearIconoBiblio
			}
			
			function crearIconoCentrosalud (feature, latlng) {
				return L.marker(latlng, { icon: iconoCentrosalud})
			}
			var asignarIconoCentrosalud = {
			  pointToLayer: crearIconoCentrosalud
			}
			
			function crearIconoEscul (feature, latlng) {
				return L.marker(latlng, { icon: iconoEscul})
			}
			var asignarIconoescul = {
			  pointToLayer: crearIconoEscul
			}
						
			function crearIconoClinicaprivada (feature, latlng) {
				return L.marker(latlng, { icon: iconoClinicaprivada})
			}
			var asignarIconoClinicaprivada = {
			  pointToLayer: crearIconoClinicaprivada
			}
			
			function crearIconoDependmuni (feature, latlng) {
				return L.marker(latlng, { icon: iconoDependmuni})
			}
			var asignarIconoDependmuni = {
			  pointToLayer: crearIconoDependmuni
			}
			
			function crearIconoEstabeducat (feature, latlng) {
				return L.marker(latlng, { icon: iconoEstabeducat})
			}
			var asignarIconoEstabeducat = {
			  pointToLayer: crearIconoEstabeducat
			}
			
			function crearIconoFarmacias (feature, latlng) {
				return L.marker(latlng, { icon: iconoFarmacias})
			}
			var asignarIconoFarmacias = {
			  pointToLayer: crearIconoFarmacias
			}
			
			function crearIconoHospitales (feature, latlng) {
				return L.marker(latlng, { icon: iconoHospitales})
			}
			var asignarIconoHospitales = {
			  pointToLayer: crearIconoHospitales
			}
			function crearIconoPilas (feature, latlng) {
				return L.marker(latlng, { icon: iconoPilas})
			}
			var asignarIconoPilas = {
			  pointToLayer: crearIconoPilas
			}
			function crearIconoSeguridad (feature, latlng) {
				return L.marker(latlng, { icon: iconoSeguridad})
			}
			var asignarIconoSeguridad = {
			  pointToLayer: crearIconoSeguridad
			}
			
			function crearIconoJardmatern(feature, latlng) {
				return L.marker(latlng, { icon: iconoJardmatern})
			}
			var asignarIconoJardmatern = {
			  pointToLayer: crearIconoJardmatern
			}
			
			function crearIconoPoli(feature, latlng) {
				return L.marker(latlng, { icon: iconoPoli})
			}
			var asignarIconoPoli = {
			  pointToLayer: crearIconoPoli
			}
			
			function crearIconoUnivec(feature, latlng) {
				return L.marker(latlng, { icon: iconoUnivec})
			}
			var asignarIconoUnivec = {
			  pointToLayer: crearIconoUnivec
			}
			
			function crearIconoSTV(feature, latlng) {
				return L.marker(latlng, { icon: iconoSTV})
			}
			var asignarIconoUnivec = {
			  pointToLayer: crearIconoSTV
			}
			
			function crearIconoVerde2(feature, latlng) {
				return L.marker(latlng, { icon: iconoVerde2})
			}
			var asignarIconoVerde2 = {
			  pointToLayer: crearIconoVerde2
			}
			
			function crearIconoSema_r2(feature, latlng) {
				return L.marker(latlng, { icon: iconoSema_r2})
			}
			var asignarIconoSema_r2 = {
			  pointToLayer: crearIconoSema_r2
			}
				
			/* POPUPS */
			function agregarPopupbarrios(feature, layer) { 
				if (feature.properties && feature.properties.Nombre_1) { 
						layer.bindPopup( "<strong>" + feature.properties.Nombre_1 + "</strong><br/>" + feature.properties.Descrip); 
				} 
			}
			function agregarPopuppuntorecepcionpilas(feature, layer) { 
				if (feature.properties && feature.properties.Name) { 
						layer.bindPopup( "<strong>" + feature.properties.Name + "</strong>"); 
				} 
				
			}
			function agregarPopupesculturas(feature, layer) { 
				if (feature.properties && feature.properties.Referencia) { 
						layer.bindPopup( "<strong>" + feature.properties.Referencia + "</strong><br/>" + feature.properties.Escultura); 
				} 	
										
			}
			function agregarPopupespaciosverdes(feature, layer) { 
				if (feature.properties && feature.properties.NOMBRE) { 
						layer.bindPopup( "<strong>" + feature.properties.Descriptio + "</strong><br/>" + feature.properties.NOMBRE ); 
				} 
			}
			function agregarPopup(feature, layer) { 
				if (feature.properties && feature.properties.Nombre_1) { 
						layer.bindPopup( "<strong>" + feature.properties.Nombre_1 + "</strong>"); 
				} 
			}
			function agregarPopupfarmacias(feature, layer) { 
				if (feature.properties && feature.properties.Nombre) { 
						layer.bindPopup( "<strong>" + feature.properties.Nombre + "</strong>"); 
				} 
			}
			function agregarPopupres(feature, layer) { 
				if (feature.properties && feature.properties.UBICACION) { 
						layer.bindPopup( "<strong>" + feature.properties.UBICACION + "</strong>"); 
				} 
			}
			function agregarPopupjardinesmuni(feature, layer) { 
				if (feature.properties && feature.properties.nombre) { 
						layer.bindPopup( "<strong>" + feature.properties.nombre + "</strong>"); 
				} 
			}
			function agregarPopupciclovias(feature, layer) { 
				if (feature.properties && feature.properties.Distancia) { 
						layer.bindPopup( "<strong>" + feature.properties.TIPO_2 + "</strong><br/>" + feature.properties.Distancia ); 
				} 
			}
			function agregarPopupzoni(feature, layer) { 
				if (feature.properties && feature.properties.Layer) { 
					layer.bindPopup( "<strong>" + feature.properties.Layer + "</strong>"); 
				} 
			}
			function agregarPopupBarriosyLoteos(feature, layer) { 
				if (feature.properties && feature.properties.Nombre_1) { 
					layer.bindPopup( "<strong>" + feature.properties.Nombre_1 + "</strong>"); 
				}
			}
			function agregarPopupredes(feature, layer) { 
				if (feature.properties && feature.properties.Estado) {
					layer.bindPopup( "<strong>" + feature.properties.Estado + "</strong>");
				}
			}
			function agregarPopupcloacas(feature, layer) {
				if (feature.properties && feature.properties.Estado) {	 
					 layer.bindPopup( "<strong>" + feature.properties.Estado + "</strong>");
				}
			}		
			function agregarPopuplineas(feature, layer) {
				if (feature.properties && feature.properties.TENSION) {	 
					layer.bindPopup( "<strong>" + feature.properties.TENSION + "</strong>");
				}
			}
			function agregarPopupCanalesColectoresHijuelas(feature, layer) {
				if (feature.properties && feature.properties.Name) {	 
					layer.bindPopup( "<strong>" + feature.properties.Name + "</strong>");
				}
			}
            function agregarPopupDistritosDepartamentales(feature, layer) { 
				if (feature.properties && feature.properties.Nombre_1) { 
					layer.bindPopup( "<strong>" + feature.properties.Nombre_1 + "</strong><br/>" + feature.properties.Area_km2);
				} 
			}			
			function agregarPopupcuencas(feature, layer) { 
				if (feature.properties && feature.properties.Nombre_1) { 
						layer.bindPopup( "<strong>" + feature.properties.Nombre_1 + "</strong><br/>" + feature.properties.Superficie);
				} 
			}
			function estiloDistritosDepartamentales() {
				Depa.eachLayer(function(featureInstanceLayer) {
					var id_feature = featureInstanceLayer.feature.properties['qc_id'];
					if (id_feature == 0) {
						color_actual = '#d48871';
					} else if (id_feature == 1) {
						color_actual = '#e3f1df';
					} else if (id_feature == 2) {
						color_actual = '#f1dfed';
					} else if (id_feature == 3) {
						color_actual = '#adddf7';
					} else if (id_feature == 4) {
						color_actual = '#fcfacf';
					} else if (id_feature == 5) {
						color_actual = '#d4bd8b';
					} else if (id_feature == 6) {
						color_actual = '#427710';
					} else if (id_feature == 7) {
						color_actual = '#ffa400';
					} else if (id_feature == 8) {
						color_actual = '#a028ad';
					}	
					
					featureInstanceLayer.setStyle({
						color: color_actual,fillOpacity: 0.65
					});
				});
			}			
					
			function estilozoni() {
				zonificacion.eachLayer(function(featureInstanceLayer) {
					var id_feature = featureInstanceLayer.feature.properties['qc_id'];
					if (id_feature == 0) {
						color_actual = 'grey';
					} else if (id_feature == 1) {
						color_actual = '#FF0000';
					} else if (id_feature == 2) {
						color_actual = '#ff7f00';
					} else if (id_feature == 3) {
						color_actual = '#fff600';
					} else if (id_feature == 4) {
						color_actual = '#800080';
					} else if (id_feature == 5) {
						color_actual = '#5d3064';
					}else if (id_feature == 6) {
						color_actual = '#1feeb4';
					}else if (id_feature == 7) {
						color_actual = '#199f2d';
					}else if (id_feature == 8) {
						color_actual = '#74d1af';
					}else if (id_feature == 9) {
						color_actual = '#2f6e9e';
					}else if (id_feature == 10) {
						color_actual = '#b31417';
					}else if (id_feature == 11) {
						color_actual = '#E1E1E1';
					}
					featureInstanceLayer.setStyle({
						color: color_actual,fillOpacity: 0.75
					});
				});
			}	
			function estilored() {
				redesagua.eachLayer(function(featureInstanceLayer) {
					var id_feature = featureInstanceLayer.feature.properties['id'];
					if (id_feature == 1) {
						color_actual = '#62b8e5';
					} else if (id_feature == 1) {
						color_actual = '#62b8e5';
					} else if (id_feature == 2) {
						color_actual = '#fbb75b';
					} else if (id_feature == 3) {
						color_actual = '#f05d51';
					}
					featureInstanceLayer.setStyle({
						color: color_actual,fillOpacity: 0.75
					});
				});
			}	
			function estilocloacas() {
				sistcloacal.eachLayer(function(featureInstanceLayer) {
					var id_feature = featureInstanceLayer.feature.properties['id'];
					if (id_feature == 1) {
						color_actual = '#62b8e5';
					} else if (id_feature == 1) {
						color_actual = '#62b8e5';
					} else if (id_feature == 2) {
						color_actual = '#fbb75b';
					} else if (id_feature == 3) {
						color_actual = '#f05d51';
					}
					featureInstanceLayer.setStyle({
						color: color_actual,fillOpacity: 0.75
					});
				});
			}
			function estilocuencas() {
				cuencas.eachLayer(function(featureInstanceLayer) {
					var id_feature = featureInstanceLayer.feature.properties['qc_id'];
					if (id_feature == 1) {
						color_actual = '#62b8e5';
					} else if (id_feature == 2) {
						color_actual = '#fbb75b';
					} else if (id_feature == 3) {
						color_actual = '#f05d51';
					}	
			var optiones_textura = {height: 8, weight: 4, spaceWeight: 4, color: color_actual, spaceColor: color_actual, spaceOpacity: 0.3, angle: -45};
					var textura_cuencas = new L.StripePattern(optiones_textura); textura_cuencas.addTo(map);
					
					featureInstanceLayer.setStyle({
						color: color_actual,fillOpacity: 0.75, fillPattern: textura_cuencas
					});
				});
			}
			
			/* BASE LAYERS */
			var osmUrl = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',
				osmAttrib = '&copy; <a href="http://openstreetmap.org/copyright">OpenStreetMap</a> contributors',
				mapabase_osm = L.tileLayer(osmUrl, {maxZoom: 20, attribution: osmAttrib});
			var otUrl = 'https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png',
				otAttrib = 'Map data: &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, <a href="http://viewfinderpanoramas.org">SRTM</a> | Map style: &copy; <a href="https://opentopomap.org">OpenTopoMap</a> (<a href="https://creativecommons.org/licenses/by-sa/3.0/">CC-BY-SA</a>)',
				mapabase_ot = L.tileLayer(otUrl, {maxZoom: 20, attribution: otAttrib});
			var mapa_bing = L.bingLayer('AggHCsJIZIwHrL4Bm6Bt7O1JMXRVk6ca6IoFkILGNWFSl3RAWg-RuYq2jG5VzpIK');
							
			/* OVERLAYS Y GRUPOS */
			var plazagc = L.marker([-32.92524, -68.84439]).bindPopup('Plaza GC.').openPopup(),
				centrosdesalud = L.geoJson(centrosdesalud, { pointToLayer: crearIconoCentrosalud, onEachFeature: agregarPopup }),
				escultura= L.geoJson(Esculturas , { pointToLayer: crearIconoEscul, onEachFeature: agregarPopupesculturas}),
				godoycruz = L.geoJson(godoycruz),
				cicloviasproy = L.geoJson(CicloviasProyectadas,{ onEachFeature: agregarPopupciclovias}).setStyle({color:"yellow"}),
				cicloviasexist =L.geoJson(CicloviasExistentes,{ onEachFeature: agregarPopupciclovias}).setStyle({color:"red"}),
				lineasd=L.geoJson(LineasD,{ onEachFeature: agregarPopuplineas}).setStyle({color:"orange"}),
				lineast=L.geoJson(LineasT,{ onEachFeature: agregarPopuplineas}).setStyle({color:"red"}),
				CanalesColectoresHijuelas=L.geoJson(CanalesColectoresHijuelas,{ onEachFeature: agregarPopupCanalesColectoresHijuelas}).setStyle({color:"#1fc5ee"}),
				clinicaspriv = L. geoJson(ClinicasPrivadas,{ pointToLayer: crearIconoClinicaprivada, onEachFeature: agregarPopupjardinesmuni }),
				hospital = L.geoJson(Hospital, { pointToLayer: crearIconoHospitales, onEachFeature: agregarPopup }),
				escuelas = L.geoJson(Escuelas, { pointToLayer: crearIconoEstabeducat, onEachFeature: agregarPopup }),
				farmacias = L.geoJson(Farmacias, { pointToLayer: crearIconoFarmacias, onEachFeature: agregarPopupfarmacias }),
				polideportivos = L.geoJson(Polideportivos,  { pointToLayer: crearIconoPoli, onEachFeature: agregarPopup }),
				jardinesmuni = L.geoJson(JardinesMunicipales,{ pointToLayer: crearIconoJardmatern, onEachFeature: agregarPopupjardinesmuni }),
				seguridad =L.geoJson(Seguridad,{ pointToLayer: crearIconoSeguridad, onEachFeature: agregarPopup }),
				residenciasad =L.geoJson(ResidenciasAdultosMayores,{ pointToLayer: crearIconoNaranja, onEachFeature: agregarPopup }),
				barriospopulares=L.geoJson(BarriosPopulares, {onEachFeature: agregarPopupbarrios}).setStyle({color:"#e31a1c",fillOpacity: 0.75})
				reservorios=L.geoJson(Reservorios,{onEachFeature: agregarPopupres}).setStyle({color:"#729b6f",fillOpacity: 0.75}),
				zonificacion=  L.geoJson(Zonificacion,{ onEachFeature: agregarPopupzoni }),
				BarriosyLoteos=  L.geoJson(BarriosyLoteos,{ onEachFeature: agregarPopupBarriosyLoteos }),
				redesagua= L.geoJson(RedesdeAguas,{ onEachFeature: agregarPopupredes}),
				espverdes= L.geoJson(EspaciosVerdes, { onEachFeature: agregarPopupespaciosverdes }).setStyle({color:"#4daf4a",fillOpacity: 0.75}),
				cuencas= L.geoJson(Cuencashidrograficas,{ onEachFeature: agregarPopupcuencas}),
				puntospilas= L.geoJson(PuntosRecepcionPilas, { pointToLayer: crearIconoPilas, onEachFeature: agregarPopuppuntorecepcionpilas  }),
				depen= L.geoJson(DependenciasMunicipales, { pointToLayer: crearIconoDependmuni, onEachFeature: agregarPopup }),
				punt= L.geoJson(PuntosVerdes, { pointToLayer: crearIconoVerde2, onEachFeature: agregarPopup }),
				solma= L.geoJson(Solmaforos, { pointToLayer: crearIconoSema_r2, onEachFeature: agregarPopupfarmacias }),
				estacion= L.geoJson(EstacionesdeServicio, { pointToLayer: crearIconoAzul, onEachFeature: agregarPopupfarmacias }),
				meteo= L.geoJson(Estaciones, { pointToLayer: crearIconoNegro, onEachFeature: agregarPopupfarmacias }),
				ripieras=L.geoJson(Ripieras, {onEachFeature: agregarPopupfarmacias}).setStyle({color:"#e31a1c",fillOpacity: 0.75}),
				zonatu=L.geoJson(ZonaNatural, {onEachFeature: agregarPopupfarmacias}).setStyle({color:"#e31a1c",fillOpacity: 0.75}),
				zonaurb=L.geoJson(ZonaUrbana, {onEachFeature: agregarPopupfarmacias}).setStyle({color:"#e2e21a",fillOpacity: 0.75}),
				limiurb=L.geoJson(LimiteUrbano, {onEachFeature: agregarPopupfarmacias}).setStyle({color:"red"}),
				Depa= L.geoJson(DistritosDepartamentales, { onEachFeature: agregarPopupDistritosDepartamentales}),
				recic= L.geoJson(PlantaRecicladora, { pointToLayer: crearIconoVerde}),
				bank= L.geoJson(Bancos, { pointToLayer: crearIconoAzul,  onEachFeature: agregarPopup}),
				caja= L.geoJson(Cajeros, { pointToLayer: crearIconoAmarillo,  onEachFeature: agregarPopupbarrios}),
				cobro= L.geoJson(Pagofacil, { pointToLayer: crearIconoNaranja,  onEachFeature: agregarPopupbarrios}),
				sistcloacal= L.geoJson(SistemaCloacal, { onEachFeature: agregarPopupcloacas});
				

			/* CREACIÓN DEL MAPA CON BASE LAYERS Y OVERLAYS */
			var map = L.map('map', {
				layers: [mapa_bing ,godoycruz]
			}).setView([-32.9314, -68.8497], 13);
			var marker = L.marker(map.getCenter(),{icon:iconoSTV}).bindPopup('Marcador de Street View').addTo(map);
            map.on('move', function() { marker.setLatLng(map.getCenter()); });
			var printer = L.easyPrint();
			
			
			/* Make sure the marker stays in the centre when the map is moved
             map.on('move', function() { marker.setLatLng(map.getCenter()); });*/
			
			/* FUNCIONES DE ESTILO DE OVERLAYS */
			estiloDistritosDepartamentales();
			estilozoni();
			estilored();
			estilocloacas();
			estilocuencas();
          
			/* CREACIÓN DEL LAYERS CONTROL */
			var baseMaps = {
				"OpenTopoMap": mapabase_ot,
				 "Argenmap": mapabase_argenmap,
				 "Satelite Bing": mapa_bing,
			};
			
				
			/*var overlayMaps = {
				"Infraestructura urbana":{
				"Barrios Populares":barriospopulares,
				"Colectores Aluvionales":colec,
				"Cuencas Hidrográficas":cuencas,
				"Distritos Departamentales":Depa,
				"Establecimientos Educativos":escuelas,
				"Estaciones Meteorológicas":meteo,
				"Instituciones de Seguridad":seguridad,
				"Polideportivos":polideportivos,
				"Reservorios urbanos":reservorios,
				"Residencias de Adultos Mayores":residenciasad,
				"Zonificación":zonificacion,
				"Barrios y Loteos":BarriosyLoteos,
				
			};*/
			var groupedOverlays = {
			     "Street View": {
				"Marcador":marker,
				},
				
				"Infraestructura de Salud": {
					"Centros de Salud":centrosdesalud,
					"Clínicas Privadas":clinicaspriv,
					"Farmacias":farmacias,
					"Hospitales":hospital,
				},
				"Infraestructura Ambiental": {
				    "Planta Recicladora":recic,
					"Puntos de Recepción de Pilas":puntospilas,	
					"Puntos Verdes":punt,
					"Solmáforos":solma,
					
				},
				"Infraestructura de Servicio": {                 
					"Estaciones de Servicio":estacion,
					"Lineas de Distribución de Energía":lineasd,
					"Lineas de Transporte de Energía":lineast,
					"Red Colectora Cloacal":sistcloacal,
					"Red Distribuidora de Agua Potable":redesagua,
					
				},
				"Movilidad": {
					"Ciclovías Existentes":cicloviasexist,
					"Ciclovías Proyectadas":cicloviasproy,
				
                },
				"Patrimonio": {
				"Esculturas":escultura,

				},
				"Infraestructura Urbana":{
				"Bancos":bank,
				"Barrios y Loteos":BarriosyLoteos,
				"Barrios Populares":barriospopulares,
				"Cajeros":caja,
				"Canales Colectores Hijuelas":CanalesColectoresHijuelas,
				"Cuencas Hidrográficas":cuencas,
				"Dependencias Municipales":depen,
				"Distritos Departamentales":Depa,
				"Espacios Verdes":espverdes,
				"Establecimientos Educativos":escuelas,
				"Estaciones Meteorológicas":meteo,
				"Instituciones de Seguridad":seguridad,
				"Jardines Municipales":jardinesmuni,
				"Limite Urbano":limiurb,
				"Pago Facil - Rapipago":cobro,
				"Polideportivos":polideportivos,
				"Reservorios urbanos":reservorios,
				"Residencias de Adultos Mayores":residenciasad,
				"Ripieras":ripieras,
				"Zona con Características Especiales de Urbanización":zonaurb,
				"Zona Especial de Conservacion Natural":zonatu,
				"Zonificación":zonificacion,
				
				
				},
			   
				
				
			};

			var opciones_groupedlayers = {
				groupCheckboxes: false
			};
		    //L.control.layers(baseMaps, overlayMaps).addTo(map);
			
		    L.control.groupedLayers(baseMaps, groupedOverlays, opciones_groupedlayers).addTo(map);
			map.on('overlayadd', onOverlayAdd);
		    map.on('overlayremove', onOverlayRemove);
			L.control.scale().addTo(map);
			L.control.polylineMeasure().addTo(map);
			L.streetView({ position: 'topleft'}).addTo(map);
			L.easyPrint({filename: 'myMap',exportOnly: true,hideControlContainer: true, sizeModes: ['Current', 'A4Landscape', 'A4Portrait']}).addTo(map);
            function manualPrint () { printer.printMap('CurrentSize', 'MyManualPrint');
		}

			function onOverlayAdd(e){
				idlayer = "";
				if (e.name == "Ciclovías Proyectadas") {
					idlayer = "cicloviasproy";
				} else if (e.name == "Ciclovías Existentes") {
				idlayer = "cicloviasexist";
			}
				document.getElementById("ref_" + idlayer).style.display = 'block';
			}

			function onOverlayRemove(e){
				idlayer = "";
				if (e.name == "Ciclovías Proyectadas") {
					idlayer = "cicloviasproy";
				
				} else if (e.name == "Ciclovías Existentes") {
				idlayer = "cicloviasexist";
			}
				document.getElementById("ref_" + idlayer).style.display = 'none';
			}
		</script>
	</body>
</html>
       

      
